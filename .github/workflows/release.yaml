name: Release Charts

on:
  push:
    branches:
      - master

jobs:
  release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history to get commit logs
          tags: true      # Fetch all tags

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Dependencies
        run: |
          # Install Helm
          curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          
          # Install git-chglog
          GIT_CHGLOG_VERSION=0.15.1  # Use the latest version
          curl -sSL https://github.com/git-chglog/git-chglog/releases/download/v${GIT_CHGLOG_VERSION}/git-chglog_${GIT_CHGLOG_VERSION}_linux_amd64.tar.gz | tar -xz -C /usr/local/bin git-chglog

      - name: Generate per-chart CHANGELOG.md files
        run: |
          for chart_dir in charts/*/; do
            chart=$(basename "$chart_dir")
            echo "Processing chart: $chart"

            # Get the current version from Chart.yaml
            current_version=$(grep '^version:' "${chart_dir}Chart.yaml" | awk '{print $2}')
            next_tag="${chart}-${current_version}"

            # Get the latest tag for this chart
            last_tag=$(git tag --list "${chart}-*" --sort=-v:refname | head -n 1)

            if [ -z "$last_tag" ]; then
              echo "No previous tag found for $chart. Generating changelog from the beginning."
              # Generate changelog from the beginning
              git-chglog --config .chglog/config.yml --next-tag "$next_tag" --output "${chart_dir}CHANGELOG.md" -- "$chart_dir"
            else
              echo "Found last tag for $chart: $last_tag"
              # Generate changelog since the last tag
              git-chglog --config .chglog/config.yml --next-tag "$next_tag" --output "${chart_dir}CHANGELOG.md" "${last_tag}..HEAD" -- "$chart_dir"
            fi
          done

      # Optionally, create and push tags before releasing
      # - name: Create and Push Git Tags
      #   run: |
      #     # [Script to create and push tags]
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.0  # Use the latest version
        with:
          charts_repo_url: https://itzg.github.io/minecraft-server-charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
